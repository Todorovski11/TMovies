@model TMovies.Models.Movie
@using TMovies.Models.Enum
@{
    ViewBag.Title = "Create";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/js/select2.min.js"></script>

<h2 class="text-center mb-4">Create New Movie</h2>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="card-title text-primary mb-4">Movie Details</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @using (Html.BeginForm("CreateMovie", "Movie", FormMethod.Post, new { id = "create-form", @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter movie title" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter movie rating" } })
                            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter movie runtime" } })
                            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.TextAreaFor(model => model.Plot, new { @class = "form-control", rows = "4", placeholder = "Enter movie plot" })
                            @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter movie director" } })
                            @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImgLink, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.ImgLink, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter link for the poster" } })
                            @Html.ValidationMessageFor(model => model.ImgLink, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImgBanner, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.ImgBanner, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter link for the banner" } })
                            @Html.ValidationMessageFor(model => model.ImgBanner, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IMDbLink, htmlAttributes: new { @class = "text-muted mb-1" })
                            @Html.EditorFor(model => model.IMDbLink, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter IMDb Link" } })
                            @Html.ValidationMessageFor(model => model.IMDbLink, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "text-muted mb-1" })
                            <select id="genre-dropdown" class="form-control">
                                <option value="">Select Genre</option>
                                @foreach (Genre genre in Enum.GetValues(typeof(Genre)))
                                {
                                    <option value="@genre">@genre</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Genre) 
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "text-muted mb-1" })
                            <br />
                            <select id="actors-dropdown" class="form-control" multiple="multiple" name="SelectedActors">
                                @foreach (var actor in ViewBag.ActorsList)
                                {
                                    <option value="@actor.Value">@actor.Text</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.Actors, "", new { @class = "text-danger" })
                        </div>


 
                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary">Create</button>
                            <a href="@Url.Action("Movies")" class="btn btn-secondary ml-3">Back to List</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0-beta.1/js/select2.min.js"></script>

<script>
    $(document).ready(function () {
        $('#actors-dropdown').select2({
            placeholder: 'Select actors',
            allowClear: true,
            tags: true
        });
    });

    document.getElementById('genre-dropdown').addEventListener('change', function () {
        var selectedGenre = this.value;
        document.getElementById('Genre').value = selectedGenre;
    });
</script>
